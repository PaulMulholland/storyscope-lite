<?php

/**
 * Implements hook_field_extra_fields().
 */
function extra_fields_field_extra_fields() {
  $extra = array();
  foreach (node_type_get_types() as $type) {
    if ($type->has_title) {
      $extra['node'][$type->type]['display']['title'] = array(
        'label' => t('Extra field: @title', array('@title' => $type->title_label)),
        'weight' => -4,
      );
    }
  }
  return $extra;
}

/**
 * Implements hook_node_view().
 */
function extra_fields_node_view($node, $view_mode, $langcode) {
  $displays = field_extra_fields_get_display('node', $node->type, $view_mode);
  if (!empty($displays['title']['visible'])) {
    $node->content['title'] = array(
      '#theme' => 'extra_fields_title',
      '#node' => $node,
      '#view_mode' => $view_mode,
    );
  }
}


/**
 * Implements hook_theme().
 */
function extra_fields_theme($existing, $type, $theme, $path) {
  return array(
    'extra_fields_title' => array(
      'variables' => array('node' => NULL, 'view_mode' => NULL),
    ),
  );
}



function theme_extra_fields_title($variables) {
  $node = $variables['node'];
  $view_mode = $variables['view_mode'];
  $entity_uri = drupal_lookup_path('alias', 'node/' . $node->nid);
  drupal_set_message($entity_uri);
  $options = array();
  // --------------------------------------------------------------------------
  // Here we check for certain views that do not want to have clickable titles.
  // --------------------------------------------------------------------------




  // --------------------------------------------------------------------------
  // Theme the title with a clickable link
  // --------------------------------------------------------------------------
  $output = '<h2 class="node-title bingo">';
  $output .= l($node->title, $entity_uri, $options);
  /* We don't want event counts for source events at the moment so comment it out.
  // if ($view_mode == 'teaser' && $node->type == 'source_event') {
  //    $output .= ' <span class="event-count">' . $node->events_count . '</span> ';
  // }
  */
  $output .= '</h2>';
  return $output;
}




/**


/**
 * Implements hook_entity_info_alter().
 */
function extra_fields_entity_info_alter(&$entity_info) {
  $entity_info['node']['view modes'] += array(
    'subtitle_teaser' => array(
      'label' => t('Subtitle Teaser'),
      'custom settings' => TRUE,
    ),
  );
}

/* Features implementation for exporting extra fields information */

/**
 * Implements hook_features_api.
 */
function extra_fields_features_api() {
  return array(
    'extra_fields' => array(
      'name' => t('Extra fields'),
      'default_hook' => 'extra_fields_info',
      'default_file' => FEATURES_DEFAULTS_INCLUDED,
      'features_source' => TRUE,
      'file' => drupal_get_path('module', 'extra_fields') .'/extra_fields.features.inc',
    ),
  );
}


