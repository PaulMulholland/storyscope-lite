
<?php
/**
 * file: stories_of_theme.module
 *
 * Stories of theme block. 
 *
 * Paul Mulholland <p.mulholland@open.ac.uk>
 *
 */

function stories_of_theme_menu() {
	$items['dossier/%/story/%/stories/%/%'] = array(
	 'title' => 'Stories',
	 'description' => 'Stories related to a topic',
	 'page callback' => 'stories_for_a_topic',
			'page arguments' => array(5,6,'tags'),
	'access callback' => TRUE,
	);
	$items['dossier/%/story/%/stories/%/%/tags'] = array(
	 'title' => 'Tag of stories',
	 'description' => 'Stories related to a topic',
			'type' => MENU_DEFAULT_LOCAL_TASK,
	 'page callback' => 'stories_for_a_topic',
			'page arguments' => array(5,6,'tags'),
	'access callback' => TRUE,
	);
	$items['dossier/%/story/%/stories/%/%/themes'] = array(
	 'title' => 'Theme of stories',
	 'description' => 'Stories related to a topic',
			'type' => MENU_LOCAL_TASK,
	 'page callback' => 'stories_for_a_topic',
			'page arguments' => array(5,6,'themes'),
	'access callback' => TRUE,
	);
	$items['dossier/%/stories/%/%'] = array(
	 'title' => 'Stories',
	 'description' => 'Stories related to a topic',
	 'page callback' => 'stories_for_a_topic',
	'page arguments' => array(3,4),
	'access callback' => TRUE,
	);
	$items['dossier/%/stories/%/%/tags'] = array(
	 'title' => 'Tag of stories',
	 'description' => 'Stories related to a topic',
	 'page callback' => 'stories_for_a_topic',
	'type' => MENU_DEFAULT_LOCAL_TASK,
	'page arguments' => array(3,4,'tags'),
	'access callback' => TRUE,
	);
	$items['dossier/%/stories/%/%/themes'] = array(
	 'title' => 'Theme of stories',
	 'description' => 'Stories related to a topic',
	 'page callback' => 'stories_for_a_topic',
			'type' => MENU_LOCAL_TASK,
			'page arguments' => array(3,4,'themes'),
	'access callback' => TRUE,
	);
	$items['front/stories/%/%'] = array(
	 'title' => 'Stories',
	 'description' => 'Stories related to a topic',
	 'page callback' => 'stories_for_a_topic',
	'page arguments' => array(2,3),
	'access callback' => TRUE,
	);
	$items['front/stories/%/%/tags'] = array(
	 'title' => 'Tag of stories',
	 'description' => 'Stories related to a topic',
	'type' => MENU_DEFAULT_LOCAL_TASK,
	 'page callback' => 'stories_for_a_topic',
	'page arguments' => array(2,3,'tags'),
	'access callback' => TRUE,
	);
	$items['front/stories/%/%/themes'] = array(
	 'title' => 'Theme of stories',
	'type' => MENU_LOCAL_TASK,
	 'description' => 'Stories related to a topic',
	 'page callback' => 'stories_for_a_topic',
	'page arguments' => array(2,3,'themes'),
	'access callback' => TRUE,
	);
	$items['stories/%/%'] = array(
	 'title' => 'Stories',
	 'description' => 'Stories related to a topic',
	 'page callback' => 'stories_for_a_topic',
	'page arguments' => array(1,2),
	'access callback' => TRUE,
	);
	$items['stories/%/%/tags'] = array(
	 'title' => 'Tag of stories',
	 'description' => 'Stories related to a topic',
	'type' => MENU_DEFAULT_LOCAL_TASK,
	 'page callback' => 'stories_for_a_topic',
	'page arguments' => array(1,2,'tags'),
	'access callback' => TRUE,
	);
	$items['stories/%/%/themes'] = array(
	 'title' => 'Theme of stories',
	'type' => MENU_LOCAL_TASK,
	 'description' => 'Stories related to a topic',
	 'page callback' => 'stories_for_a_topic',
	'page arguments' => array(1,2,'themes'),
	'access callback' => TRUE,
	);
	$items['dossier/%/story/%/settingstories'] = array(
	 'title' => 'Stories',
	 'description' => 'Stories related to a topic',
	 'page callback' => 'setting_stories_for_a_topic',
	'access callback' => TRUE,
	);
	$items['dossier/%/settingstories'] = array(
	 'title' => 'Stories',
	 'description' => 'Stories related to a topic',
	 'page callback' => 'setting_stories_for_a_topic',
	'access callback' => TRUE,
	);
	$items['front/settingstories'] = array(
	 'title' => 'Stories',
	 'description' => 'Stories related to a topic',
	 'page callback' => 'setting_stories_for_a_topic',
	'access callback' => TRUE,
	);
	$items['settingstories'] = array(
	 'title' => 'Stories',
	 'description' => 'Stories related to a topic',
	 'page callback' => 'setting_stories_for_a_topic',
	'access callback' => TRUE,
	);
	return $items;
}

function stories_for_a_topic($m, $id, $option = 'tags', $n = 8) {
	if(isset($m) && isset($id)) {
		$topic = '/'.$m.'/'.$id;
	}
	else {
		return '';
	}
// 	if(isset($_GET['storytag'])) {
// 		$topic = $_GET['storytag'];
// 	}
// 	else {
// 		return '';
// 	}
	drupal_set_breadcrumb(array(l('Home', '<front>')));
	$output = '';
	//check event space for the topic has been calculated
	new_event_space_of_a_topic($topic);
	//list of themes for a topic
	$name = get_topic_name($topic);

	if($option == 'tags') {
		$query = "SELECT result_list.id, order_list.tags, order_list.events
FROM
(SELECT query_tag.id
FROM query_tag
WHERE query_tag.tag = '".$topic."') as result_list 
LEFT JOIN 
(SELECT  query_tag.id, COUNT(DISTINCT query_tag.tag) as tags, COUNT(DISTINCT value_table.event) as events
FROM query_tag, tag_event_id, event_attribute_value as value_table
WHERE
value_table.value = '".$topic."' AND
value_table.event = tag_event_id.event_id AND
query_tag.tag = tag_event_id.tag AND
value_table.attribute <> 'location'
GROUP BY query_tag.id
ORDER BY tags DESC, events DESC LIMIT ".$n.") as order_list
ON
result_list.id = order_list.id;";
	}
	else {
		//stories ordered according to their theme match
		$query = "SELECT  query_tag.id, COUNT(DISTINCT query_tag.tag) as tags, COUNT(DISTINCT value_table.event) as events
FROM query_tag, tag_event_id, event_attribute_value as value_table
WHERE
value_table.value = '".$topic."' AND
value_table.event = tag_event_id.event_id AND
query_tag.tag = tag_event_id.tag AND
value_table.attribute <> 'location'
GROUP BY query_tag.id
ORDER BY tags DESC, events DESC LIMIT ".$n.";";
	}
		
		
		drupal_set_title(t('Storyscope stories: '.$name));
		$result = db_query($query);
		$output .= '<div class="panel-middle-3"><div class="panel-pane pane-views pane-dossier-stories">';
		$output .= '<h2 class="pane-title"><i class="fa fa-comments fa-lg">&nbsp;</i>Stories</h2>';
		$output .= '<div class="pane-content"><div class="view view-dossier-stories view-id-dossier_stories view-display-id-default resource-container container-full wide-items view-dom-id-7450ee9ef1af82379eb82e6a617daa7a contextual-links-region"><div class = "view-content">';

		$story_output = '';
		foreach ($result as $record) {
			$node = node_load($record->id);
			if($node) {
				$path = drupal_get_path_alias('node/'.$node->nid);
				$title = $node->title;
				$story_output .= '<article class="node-'.$node->nid.' node node-story node-promoted node-teaser contextual-links-region node-by-viewer clearfix"><div class="article-inner"><header><h2 class="title">'.l($title,$path).'</h2></header></div></article>';
			}
		}
		if(empty($story_output)) {
			$output .= 'No stories have been written related to this tag.';
		}
		else {
			$output .= $story_output;
		}
		$output .= '</div></div></div></div>';

	return $output;
}

function setting_stories_for_a_topic() {
	$params = drupal_get_query_parameters();
	$location = $params['storylocation'];
	$time = $params['storytime'];
	if(isset($params['storyend'])) {
		$end = $params['storyend'];
	}
	else {
		$end = 0;
	}

	if($location) {
		$output = stories_for_a_setting($location, $time, $end);
	}
	else {
		$output = '';
	}
	return $output;
}

function stories_for_a_setting($location, $start, $end = FALSE) {
	$output = '';
	if($start && $end) {
		//query
		$query = "SELECT result_table.id, COUNT(result_table.tag) as tags
FROM
(SELECT DISTINCT event_location_start.id, event_location_start.tag, event_location_start.event, event_location_start.location, event_location_start.start, event_end.end
FROM
(
SELECT events_table.id, events_table.tag, events_table.event, events_table.location, event_start_table.start
FROM
(SELECT DISTINCT query_tag.id, query_tag.tag, event_attribute_value.event, location_table.value as location
FROM tag_event_id, query_tag, event_attribute_value, event_attribute_value as location_table, event_attribute_value as start_table, attribute_name as location_attribute_name, attribute_name as time_attribute_name
WHERE 
query_tag.tag = tag_event_id.tag AND
tag_event_id.event_id = event_attribute_value.event AND
event_attribute_value.event = location_table.event AND
event_attribute_value.event = start_table.event AND
location_table.value = '".$location."' AND
location_table.attribute = location_attribute_name.attribute AND
location_attribute_name.name = 'location' AND
((start_table.attribute = time_attribute_name.attribute AND
time_attribute_name.name = 'start_time') OR
(start_table.attribute = time_attribute_name.attribute AND
time_attribute_name.name = 'end_time'))) as events_table
LEFT JOIN
(SELECT DISTINCT query_tag.tag, event_attribute_value.event, location_table.value as location, start_table.value as start
FROM tag_event_id, query_tag, event_attribute_value, event_attribute_value as location_table, event_attribute_value as start_table, attribute_name as location_attribute_name, attribute_name as time_attribute_name
WHERE 
query_tag.tag = tag_event_id.tag AND
tag_event_id.event_id = event_attribute_value.event AND
event_attribute_value.event = location_table.event AND
event_attribute_value.event = start_table.event AND
location_table.attribute = location_attribute_name.attribute AND
location_attribute_name.name = 'location' AND
start_table.attribute = time_attribute_name.attribute AND
time_attribute_name.name = 'start_time') as event_start_table ON event_start_table.event = events_table.event
) as event_location_start
LEFT JOIN
(SELECT DISTINCT event_attribute_value.event, end_table.value as end
FROM tag_event_id, query_tag, event_attribute_value, event_attribute_value as end_table, attribute_name as time_attribute_name
WHERE 
query_tag.tag = tag_event_id.tag AND
tag_event_id.event_id = event_attribute_value.event AND
event_attribute_value.event = end_table.event AND
end_table.attribute = time_attribute_name.attribute AND
time_attribute_name.name = 'end_time') as event_end ON event_location_start.event = event_end.event) as result_table
WHERE (result_table.start < '".$end."' AND result_table.end > '".$start."') OR (result_table.start > '".$start."' AND result_table.start < '".$end."') OR (result_table.end > '".$start."' AND result_table.end < '".$end."')
GROUP BY result_table.id
ORDER BY tags;";

	}
	if($start || $end) {
		if($start) {
			$time = $start;
		}
		else {
			$time = $end;
		}
		//query
		$query = "SELECT result_table.id, COUNT(result_table.tag) as tags
FROM
(SELECT DISTINCT event_location_start.id, event_location_start.tag, event_location_start.event, event_location_start.location, event_location_start.start, event_end.end
FROM
(
SELECT events_table.id, events_table.tag, events_table.event, events_table.location, event_start_table.start
FROM
(SELECT DISTINCT query_tag.id, query_tag.tag, event_attribute_value.event, location_table.value as location
FROM tag_event_id, query_tag, event_attribute_value, event_attribute_value as location_table, event_attribute_value as start_table, attribute_name as location_attribute_name, attribute_name as time_attribute_name
WHERE
query_tag.tag = tag_event_id.tag AND
tag_event_id.event_id = event_attribute_value.event AND
event_attribute_value.event = location_table.event AND
event_attribute_value.event = start_table.event AND
location_table.value = '".$location."' AND
location_table.attribute = location_attribute_name.attribute AND
location_attribute_name.name = 'location' AND
((start_table.attribute = time_attribute_name.attribute AND
time_attribute_name.name = 'start_time') OR
(start_table.attribute = time_attribute_name.attribute AND
time_attribute_name.name = 'end_time'))) as events_table
LEFT JOIN
(SELECT DISTINCT query_tag.tag, event_attribute_value.event, location_table.value as location, start_table.value as start
FROM tag_event_id, query_tag, event_attribute_value, event_attribute_value as location_table, event_attribute_value as start_table, attribute_name as location_attribute_name, attribute_name as time_attribute_name
WHERE
query_tag.tag = tag_event_id.tag AND
tag_event_id.event_id = event_attribute_value.event AND
event_attribute_value.event = location_table.event AND
event_attribute_value.event = start_table.event AND
location_table.attribute = location_attribute_name.attribute AND
location_attribute_name.name = 'location' AND
start_table.attribute = time_attribute_name.attribute AND
time_attribute_name.name = 'start_time') as event_start_table ON event_start_table.event = events_table.event
) as event_location_start
LEFT JOIN
(SELECT DISTINCT event_attribute_value.event, end_table.value as end
FROM tag_event_id, query_tag, event_attribute_value, event_attribute_value as end_table, attribute_name as time_attribute_name
WHERE
query_tag.tag = tag_event_id.tag AND
tag_event_id.event_id = event_attribute_value.event AND
event_attribute_value.event = end_table.event AND
end_table.attribute = time_attribute_name.attribute AND
time_attribute_name.name = 'end_time') as event_end ON event_location_start.event = event_end.event) as result_table
WHERE result_table.start = '".$time."' OR result_table.end = '".$time."' OR (result_table.start < '".$time."' AND result_table.end > '".$time."')
GROUP BY result_table.id
ORDER BY tags;";

	}

	//stories ordered according to their match
	$result = db_query($query);
	if($start && $end) {
		$label = get_topic_name($location).' '.$start.' to '.$end;
	}
	else {
		$label = get_topic_name($location).' '.$time;
	}
	drupal_set_title(t('Storyscope stories: '.$label));
	
	$output .= '<div class="panel-middle-3"><div class="panel-pane pane-views pane-dossier-stories">';
	$output .= '<h2 class="pane-title"><i class="fa fa-comments fa-lg">&nbsp;</i>Stories</h2>';
	$output .= '<div class="pane-content"><div class="view view-dossier-stories view-id-dossier_stories view-display-id-default resource-container container-full wide-items view-dom-id-7450ee9ef1af82379eb82e6a617daa7a contextual-links-region"><div class = "view-content">';
	foreach ($result as $record) {
		$node = node_load($record->id);
		if($node) {
			$path = drupal_get_path_alias('node/'.$node->nid);
			$title = $node->title;
			$output .= '<article class="node-'.$node->nid.' node node-story node-promoted node-teaser contextual-links-region node-by-viewer clearfix"><div class="article-inner"><header><h2 class="title">'.l($title,$path).'</h2></header></div></article>';
		}
	}
	$output .= '</div></div></div></div>';
	return $output;
}

